"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeArguments = void 0;
const aries_askar_shared_1 = require("@hyperledger/aries-askar-shared");
const serialize = (arg) => {
    switch (typeof arg) {
        case 'undefined':
            return arg;
        case 'string':
            return arg;
        case 'boolean':
            return Number(arg);
        case 'number':
            return arg;
        case 'function':
            return arg;
        case 'object':
            if (arg instanceof Date) {
                return arg.valueOf();
            }
            else if (arg instanceof Uint8Array) {
                return arg.buffer;
            }
            else if (arg instanceof aries_askar_shared_1.Jwk) {
                return arg.toUint8Array().buffer;
            }
            else if (arg instanceof aries_askar_shared_1.Key) {
                return arg.handle.handle;
            }
            else if (arg instanceof aries_askar_shared_1.StoreHandle ||
                arg instanceof aries_askar_shared_1.SessionHandle ||
                arg instanceof aries_askar_shared_1.ScanHandle ||
                arg instanceof aries_askar_shared_1.ArcHandle) {
                return arg.handle;
            }
            else {
                return JSON.stringify(arg);
            }
        default:
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            throw new Error(`Could not serialize value ${arg}`);
    }
};
const serializeArguments = (args) => {
    const retVal = {};
    Object.entries(args).forEach(([key, val]) => (retVal[key] = serialize(val)));
    return retVal;
};
exports.serializeArguments = serializeArguments;
//# sourceMappingURL=serialize.js.map